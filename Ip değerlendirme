#Python
import os
import requests
import json
import time

# Replace with your VirusTotal Public API key
API_KEY = "YOUR_API_KEY_HERE"
VT_URL = "https://www.virustotal.com/api/v3/ip_addresses/{}"
HEADERS = {"x-apikey": API_KEY}

# Ensure output directories and files exist
os.makedirs("responses", exist_ok=True)
malicious_ips_path = "malicious_ips.txt"
not_found_ips_path = "not_found_ips.txt"

# Clear or create the output files
with open(malicious_ips_path, "w") as f:
    pass
with open(not_found_ips_path, "w") as f:
    pass

# Read the list of IPs
with open("ips.txt", "r") as f:
    ips = [line.strip() for line in f if line.strip()]

for ip in ips:
    response = requests.get(VT_URL.format(ip), headers=HEADERS)
    
    if response.status_code == 200:
        data = response.json()
        # Save the full JSON response
        with open(f"responses/{ip}.json", "w") as rf:
            json.dump(data, rf, indent=2)
        
        # Check malicious/suspicious counts
        stats = data.get("data", {}).get("attributes", {}).get("last_analysis_stats", {})
        malicious_count = stats.get("malicious", 0)
        suspicious_count = stats.get("suspicious", 0)
        
        if (malicious_count + suspicious_count) > 0:
            with open(malicious_ips_path, "a") as mf:
                mf.write(ip + "\n")
    
    elif response.status_code == 404:
        # IP not found in VT database
        with open(not_found_ips_path, "a") as nf:
            nf.write(ip + "\n")
    else:
        # Handle other HTTP errors or rate limiting
        print(f"Warning: HTTP {response.status_code} for IP {ip}")
    
    # Respect VT Public API rate limits
    time.sleep(15)  # adjust as necessary (4 requests per minute)

print("Script tamamlandı. Sonuçlar:")
print(f"- Malicious IPs: {malicious_ips_path}")
print(f"- Not Found IPs: {not_found_ips_path}")
print("- JSON yanıtları: responses/ klasörü")
